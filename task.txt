API - https://jsonplaceholder.typicode.com/
https://jsonplaceholder.typicode.com/posts?_limit=3&_start=4

1. Sukurti puslapį, kuriame bus atvaizduojami įrašai (posts). Kiekvienas įrašas turi:
1.1. Pavadinimą.
1.2. Pastraipą su įrašo (post) turiniu.
1.3. Autorių. Tai turi būti nuoroda. Kol kas ji gali niekur nevesti.
2. Po kiekvienu įrašu (post) gali būti komentarų (sukurti variantus įrašui, kuris neturi komentarų, kuris turi vieną komentarą ir kuris turi daugiau nei vieną komentarą). Kiekvienas komentaras turi:
2.1. Komentaro pavadinimą.
2.2. Komentaro turinį - pastraipą.
2.3. Komentarą parašiusio asmens el. pašto adresą.

3. Sukurti naują puslapį user.html, kuriame bus atvaizduojama vartotojo informacija:
3.1. Pilnas vardas.
3.2. Vartotojo vardas / nick'as.
3.3. El. paštas.
3.4. Adresas, kuris turės gatvę, namo numerį, miestą, pašto kodą. Paspaudus ant adreso, pagal koordinates, turėtų atidaryti šios vietos Google Maps. Kol kas naudoti bet kokią Google Map vietovę.
3.5. Telefono numeris.
3.6. Internetinio puslapio adresas.
3.7. Įmonės, kurioje dirba, pavadinimas.

4. Šiame puslapyje turės būti atvaizduojama:
4.1. Visi vartotojo parašyti įrašai (posts). Post'ų įrašuose nereikia atvaizduoti komentarų. Kiekvienas post'as turi turėti nuorodą.
4.2. Visi vartotojo sukurti foto albumai. Kiekvienas albumas turės:
4.2.1. Albumo pavadinimą, kuris turi būti nuoroda. Kol kas nuoroda gali niekur nevesti.

5. Pagrindiniame puslapyje (index.html) pridėti skiltį, kurioje atvaizduojamas albumų sąrašas. Kiekvienas albumas turės:
5.1. Pavadinimą, o paspaudus ant jo - nukreipiama į albumą (album.html).
5.2. Albumo autoriaus vardą.
5.3. Nuotrauką.

6. Sukurti naują puslapį album.html ir jame atvaizduoti:
6.1. Albumo pavadinimą.
6.2. Album autoriaus vardą. Paspaudus ant vardo - nukreipiama į autoriaus puslapį.
6.3. Skiltis, kurioje atvaizduojamos visos albumo nuotraukos. Panaudoti library (biblioteką), kuri skirta gražiam galerijos atvaizdavimui, pvz.:
6.3.1. https://photoswipe.com/
6.3.2. https://nanogallery2.nanostudio.org/
6.3.3. https://sachinchoolur.github.io/lightgallery.js/
6.3.4. Arba bet kurią kitą.

7. Sukurti naują puslapį post.html ir jame atvaizduoti:
7.1. Įrašo (post) pavadinimą.
7.2. Autoriaus vardą. Paspaudus ant autoriaus vardo, turėtų atidaryti autoriaus puslapį.
7.3. Įrašo turinį.
7.4. Įrašo komentarus. Komentarai turi būti atvaizduojami tokiu pačiu principu kaip ir pagrindiniame puslapyje.
7.5. Nuoroda „Kiti autoriaus įrašai", kurią paspaudus bus nukreipiama į naują puslapį. Jame bus atvaizduojami visi šio vartotojo įrašai.

8. Sukurti vartotojų puslapį (users.html), kuriame būtų atvaizduotas vartotojų sąrašas.
8.1. Prie vartotojo turėtu būti jo vardas ir parašytų post'ų skaičius.
8.2. Paspaudus ant vartotojo - nukreipiama į jo puslapį.

9. Tokiu pačiu principu, kaip ir vartotojų puslapį, sukurti puslapį albumams (albums.html).
9.1. Prie kiekvieno albumo turi būti:
9.1.1. Parašytas jo pavadinimas.
9.1.2. Parašytas vartotojo, sukūrusio šį albumą, vardas.
9.1.3. Albume esančių nuotraukų skaičius.
9.1.4. Viena nuotrauka

10. Sukurti navigacijos elementą, kuris nukreips į puslapius:
10.1. Home / pagrindinis puslapis.
10.2. Users / vartotojų puslapis.
10.3. Albums / albumų puslapis

11. Navigacijos elemente sukurti paieškos laukelį (formą ir text input).
12. Formos submit metu, nukreipti į naują puslapį (search.html).
13. Šiame puslapyje atvaizduoti paieškos rezultatą.
13.1. Jeigu nėra tinkamų rezultatų, tai parašyti, jog rezultatų pagal užklausą nerasta.
14. Filtruoti pagal:
14.1. Tikslų vartotojo username.
14.2. Jeigu neranda pagal username, tada pagal tikslų vartotojo pilną vardą.
14.3. Jeigu neranda pagal username arba pagal tikslu vartotojo pilna vardą, tada pagal tikslų vartotojo el. paštą.
14.4. Tikslų post'o pavadinimą.
14.5. Tikslų albumo pavadinimą.

Papildoma:
15. Search puslapyje turi būti paieškos forma, kuri veikia neperkraunant puslapio.
16. Sukurti filtravimo galimybę iš dalies frazės, o nebūtinai pagal tikslią frazę.